% Encoding: UTF-8

@WWW{Beaufort2023,
  author  = {François Beaufort},
  date    = {2023-09-19},
  title   = {From WebGL to WebGPU},
  url     = {https://developer.chrome.com/blog/from-webgl-to-webgpu},
  urldate = {2023-12-09},
  ranking = {rank5},
}

@Thesis{Fransson2023,
  author      = {Fransson, Emil and Hermansson, Jonatan},
  date        = {2023},
  institution = {Blekinge Institute of Technology, Faculty of Computing},
  title       = {Performance comparison of WebGPU and WebGL in the Godot game engine},
  pages       = {102},
  url         = {https://www.diva-portal.org/smash/get/diva2:1762429/FULLTEXT01.pdf},
  keywords    = {Game Engine, Performance Overhead, Rendering, WebGPU, WebGL, Spelmotor, Prestandakostnader, Rendering, WebGPU, WebGL},
  ranking     = {rank5},
  school      = {, Faculty of Computing},
}

@WWW{Gu2023,
  author  = {Yang Gu},
  date    = {2023-09-14},
  title   = {Unlock the Potential of AI and Immersive Web Applications with WebGPU},
  url     = {https://www.intel.com/content/www/us/en/developer/articles/technical/unlock-potential-ai-immersive-web-apps-with-webgpu.html},
  urldate = {2023-12-07},
  ranking = {rank3},
}

@WWW{Shumylo2023a
  author  = {Ivanna Shumylo},
  date    = {2023-04-20},
  title   = {The Future of Web Development: Trends and Technologies to Watch Out For in 2023. Part 2},
  url     = {https://stfalcon.com/en/blog/post/web-development-trends-part-2},
  urldate = {2023-12-07},
  ranking = {rank3},
}

@WWW{Shumylo2023b,
  author  = {Ivanna Shumylo},
  date    = {2023-04-19},
  title   = {The Future of Web Development: Trends and Technologies to Watch Out For in 2023},
  url     = {https://stfalcon.com/en/blog/post/web-development-trends},
  urldate = {2023-12-07},
  ranking = {rank3},
}

@WWW{W3C2023,
  author  = {{{W3C}}},
  date    = {2023-12-06},
  title   = {W3C Editor's Draft - WebGPU},
  url     = {https://gpuweb.github.io/gpuweb/},
  urldate = {2023-12-07},
  ranking = {rank4},
}

@WWW{Wallez2023,
  author  = {Corentin Wallez and Brandon Jones and François Beaufort},
  date    = {2023-10-05},
  title   = {WebGPU: Unlocking modern GPU access in the browser},
  url     = {https://developer.chrome.com/blog/webgpu-io2023/},
  urldate = {2023-12-13},
  ranking = {rank5},
}

@WWW{QuantumBlack2022,
  author  = {{QuantumBlack}},
  date    = {2022-12-01},
  title   = {The state of AI in 2022—and a half decade in review},
  url     = {https://www.mckinsey.com/~/media/mckinsey/business functions/quantumblack/our insights/the state of ai in 2022 and a half decade in review/the-state-of-ai-in-2022-and-a-half-decade-in-review},
  urldate = {2024-02-12},
  ranking = {rank2},
}

@WWW{mlcai2023,
  author  = {{mlc-ai}},
  date    = {2023-05-26},
  title   = {web-llm},
  url     = {https://github.com/mlc-ai/web-llm},
  urldate = {2024-02-12},
  ranking = {rank4},
}

@Thesis{Aldahir2023,
  author     = {Abdulsalam Aldahir},
  date       = {2023-06-16},
  title      = {Evaluation of Theperformance of Webgpu in Acluster of Web-Browsersfor Scientific Computing},
  url        = {http://umu.diva-portal.org/smash/get/diva2:1674447/FULLTEXT01.pdf},
  abstract   = {The development and widespread of Internet browsers and technologies make
them a tool that can be used for many scientific problems. This raises the ques-
tion of whether Internet browsers, together with WebGPU and WebRTC, can be
used to do scalable computing in a distributed cluster. This thesis answers the
question by implementing a peer-to-peer cluster and testing it with two prob-
lems, Matrix multiplication and Mandelbrot sets generation. The experimental
results show that computing embarrassingly parallel problems are scalable with
more than 75% efficiency.},
  ranking    = {rank3},
  readstatus = {skimmed},
}

@Thesis{Malle2018,
  author   = {Malle, Bernd and Giuliani, Nicola and Kieseberg, Peter and Holzinger, Andreas},
  date     = {2018-02-11},
  title    = {The Need for Speed of AI ApplicationsPerformance Comparison of Native vs. Browser-basedAlgorithm Implementations},
  url      = {https://arxiv.org/pdf/1802.03707.pdf},
  abstract = {AI applications pose increasing demands on performance, so it is not surprising that the
era of client-side distributed software is becoming important. On top of many AI appli-
cations already using mobile hardware, and even browsers for computationally demanding
AI applications, we are already witnessing the emergence of client-side (federated) machine
learning algorithms, driven by the interests of large corporations and startups alike. Apart
from mathematical and algorithmic concerns, this trend especially demands new levels of
computational efficiency from client environments. Consequently, this paper deals with
the question of state-of-the-art performance by presenting a comparison study between
native code and different browser-based implementations: JavaScript, ASM.js as well as
WebAssembly on a representative mix of algorithms. Our results show that current efforts
in runtime optimization push the boundaries well towards (and even beyond) native binary
performance. We analyze the results obtained and speculate on the reasons behind some
surprises, rounding the paper off by outlining future possibilities as well as some of our own
research efforts.},
}

@Article{Kenwright2023,
  author   = {Benjamin Kenwright},
  date     = {2023-08-18},
  title    = {Exploring the Power of Creative AI Tools and Game-Based Methodologies for Interactive Web-BasedProgramming},
  url      = {https://arxiv.org/abs/2308.11649},
  abstract = {In recent years, the fields of artificial intelligence and web-based programming have seen
tremendous advancements, enabling developers to create dynamic and interactive websites and
applications. At the forefront of these advancements, creative AI tools and game-based
methodologies have emerged as potent instruments, promising enhanced user experiences and
increased engagement in educational environments. This chapter explores the potential of these
tools and methodologies for interactive web-based programming, examining their benefits,
limitations, and real-world applications. We examine the challenges and ethical considerations that
arise when integrating these technologies into web development, such as privacy concerns and the
potential for bias in AI-generated content. Through this exploration, we aim to provide insights into
the exciting possibilities that creative AI tools and game-based methodologies offer for the future
of web-based programming.},
  ranking  = {rank2},
}

@InProceedings{10.1145/3587423.3595543,
  author    = {Kenwright, Benjamin},
  booktitle = {ACM SIGGRAPH 2023 Courses},
  title     = {Web Programming Using the WebGPU API},
  doi       = {10.1145/3587423.3595543},
  isbn      = {9798400701450},
  location  = {, Los Angeles, California,},
  publisher = {Association for Computing Machinery},
  series    = {SIGGRAPH '23},
  url       = {https://doi.org/10.1145/3587423.3595543},
  abstract  = {Today's web-based programming environments has become more multifaceted for accomplishing tasks that go beyond 'browsing' web-pages. The process of developing efficient web-based programs for such a wide array of applications poses a number of challenges to the programming community. Applications possess a number of workload behaviors, ranging from control intensive (e.g., searching, sorting, and parsing) to data intensive (e.g., image processing, simulation and modeling, and data mining). Web-based applications can also be characterized as compute intensive (e.g., iterative methods, numerical methods, and financial modeling), where the overall throughput of the web application is heavily dependent on the computational efficiency of the underlying hardware. Of course, no single architecture is best for running all classes of workloads, and most applications possess a mix of the workload characteristics. For instance, control-intensive applications tend to run faster on the CPU, whereas data-intensive applications tend to run fast on massively parallel architectures (like the GPU), where the same operation is applied to multiple data items concurrently. To extend and support these various workload classes so that browser-based applications wouldn't be hindered, a new generation of API needed to be developed (open the door for developers so that they can access the power of new hardware/technologies). One example of this, is the WebGPU API which exposes the capabilities of GPU hardware for the Web. The course is intended to help you get started with the WebGPU API while understanding both the HOW and WHY behind it works, so you can create your own solutions. This course is designed to teach you the new WebGPU API for graphics and compute techniques without any prior knowledge. All you need is some JavaScript experience and preferably an understanding of basic trigonometry. Whether you're new to graphics and compute development or an old pro, everyone has to start somewhere. Generally, that means starting with the basics which is the focus of this course. You'll learn through simple, easy-to-learn hands-on exercises that help you master the subject. It does this by using multiple task-based activities and discussions which complement and build upon one another.},
  address   = {New York, NY, USA},
  articleno = {21},
  numpages  = {184},
  priority  = {prio3},
  ranking   = {rank1},
  year      = {2023},
}

@InProceedings{10.1145/3532720.3535625,
  author    = {Kenwright, Benjamin},
  booktitle = {ACM SIGGRAPH 2022 Courses},
  title     = {Introduction to the WebGPU API},
  doi       = {10.1145/3532720.3535625},
  isbn      = {9781450393621},
  location  = {Vancouver, British Columbia, Canada},
  publisher = {Association for Computing Machinery},
  series    = {SIGGRAPH '22},
  url       = {https://doi.org/10.1145/3532720.3535625},
  address   = {New York, NY, USA},
  articleno = {10},
  numpages  = {184},
  priority  = {prio3},
  ranking   = {rank1},
  year      = {2022},
}

@Thesis{Nguyen2022,
  author   = {Nghi Nguyen},
  date     = {2022-05-01},
  title    = {Webgpu - the New Powerfulsuccessor, the Future of Webapi},
  url      = {https://www.theseus.fi/bitstream/handle/10024/751658/Nguyen Nghi.pdf?sequence=2&isAllowed=y},
  abstract = {The objective of this thesis was to create an application by using new Web API technology
called WebGPU to show how well and optimize this API compared to WebGL. The project
was designed to have two end results application to show what this new type of WebGPU
technology is capable of and deliver us a glimpse of beneficial from WebGPU when using
for other purposes.
The introduction of the APIs laid the foundation for many acomplishments, and web
platform was one of which increased drastically. In addition, with the most recent powerful
smart devices, that inspired the path for developers to utilize this opportunity to design and
implement so many great things.},
  priority = {prio1},
}

@Article{Lam2022,
  author        = {Remi Lam and Alvaro Sanchez-Gonzalez and Matthew Willson and Peter Wirnsberger and Meire Fortunato and Alexander Pritzel and Suman Ravuri and Timo Ewalds and Ferran Alet and Zach Eaton-Rosen and Weihua Hu and Alexander Merose and Stephan Hoyer and George Holland and Jacklynn Stott and Oriol Vinyals and Shakir Mohamed and Peter Battaglia},
  date          = {2023-08-04},
  title         = {GraphCast: Learning skillful medium-range global weather forecasting},
  eprint        = {2212.12794},
  archiveprefix = {arXiv},
  primaryclass  = {cs.LG},
  year          = {2022},
}

@WWW{Fleetwood2023,
  author  = {Christopher Fleetwood},
  date    = {2023-12-11},
  title   = {Layer Normalization as fast as possible},
  url     = {https://fleetwood.dev/posts/layernorm-as-fast-as-possible},
  urldate = {2024-03-02},
}

@WWW{Fleetwood2023a,
  author  = {Christopher Fleetwood},
  date    = {2023-04-26},
  title   = {Running LLMs in the Browser with Rust + WebGPU},
  url     = {https://fleetwood.dev/posts/running-llms-in-the-browser},
  urldate = {2024-03-02},
}

@WWW{Fleetwood2022,
  author  = {Christopher Fleetwood},
  date    = {2022-01-11},
  title   = {A case for client-side machine learning},
  url     = {https://fleetwood.dev/posts/a-case-for-client-side-machine-learning},
  urldate = {2024-03-02},
}

@WWW{Fleetwood2023c,
  author  = {Christopher Fleetwood},
  date    = {2023-04-12},
  title   = {embd},
  url     = {https://github.com/FL33TW00D/embd},
  urldate = {2024-03-02},
}

@WWW{Fleetwood2023b,
  author     = {Christopher Fleetwood},
  date       = {2023-11-26},
  title      = {whisper-turbo},
  url        = {https://github.com/FL33TW00D/whisper-turbo},
  urldate    = {2023-10-25},
  readstatus = {read},
}

@WWW{Fleetwood2023d,
  author     = {Christopher Fleetwood},
  date       = {2023-12-02},
  title      = {wgpu-bench},
  url        = {https://github.com/FL33TW00D/wgpu-bench},
  urldate    = {2024-03-02},
  readstatus = {skimmed},
}

@Comment{jabref-meta: databaseType:biblatex;}
